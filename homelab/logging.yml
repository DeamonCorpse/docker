services:
#----- GRAFANA / LOKI / PROMTAIL
  grafana:
    image: grafana/grafana-oss:${GRAFANA_TAG:-latest-ubuntu}
    container_name: Grafana
    hostname: grafana
    read_only: false
    privileged: false
    security_opt:
      - no-new-privileges:true
    user: "427"
    deploy:
      restart_policy:
        condition: unless-stopped
        delay: 5s
        window: 120s
      resources:
        limits:
          cpus: '2.0'
          memory: 300M
        reservations:
          cpus: '1.0'
          memory: 255M
    entrypoint:
      - sh
      - -euc
      - |
        mkdir -p /etc/grafana/provisioning/datasources
        cat <<EOF > /etc/grafana/provisioning/datasources/ds.yaml
        apiVersion: 1
        datasources:
        - name: Loki
          type: loki
          access: proxy
          orgId: 1
          url: http://loki:3100
          basicAuth: false
          isDefault: true
          version: 1
          editable: false
        EOF
        /run.sh
    environment:
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_INSTALL_PLUGINS=${GRAFANA_PLUGINS}
      - GF_PLUGIN_GRAFANA_IMAGE_RENDERER_RENDERING_IGNORE_HTTPS_ERRORS=true
    volumes:
      - $USERDIR/grafana:/var/lib/grafana:rw
      #- $USERDIR/grafana/plugins:/var/lib/grafana/plugins:rw
    ports:
      - ${GRAFANA_PORT:-3000}:3000
    networks:
      - docker
    healthcheck:
      test: [ "CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:3000/api/health || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 5

  loki:
    image: grafana/loki:${LOKI_TAG:-latest}
    container_name: Loki
    hostname: loki
    read_only: false
    privileged: false
    security_opt:
      - no-new-privileges:true
    deploy:
      restart_policy:
        condition: unless-stopped
        delay: 5s
        window: 120s
      resources:
        limits:
          cpus: '0.5'
          memory: 24M
        reservations:
          cpus: '0.25'
          memory: 10M
    volumes:
      - $USERDIR/loki/loki-config.yml:/etc/loki/loki-config.yml:ro
    ports:
      - ${LOKI_PORT:-3100}:3100
    networks:
      - docker
      - logging
    healthcheck:
      test: [ "CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:3100/ready || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 5

  promtail:
    image: grafana/promtail:${PROMTAIL_TAG:-latest}
    container_name: Promtail
    hostname: promtail
    read_only: false
    privileged: false
    security_opt:
      - no-new-privileges:true
    deploy:
      restart_policy:
        condition: unless-stopped
        delay: 5s
        window: 120s
      resources:
        limits:
          cpus: '0.5'
          memory: 50M
        reservations:
          cpus: '0.25'
          memory: 24M
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - $USERDIR/promtail/promtail-config.yml:/etc/promtail/promtail-config.yml:ro
      - $LOGDIR:/logs:ro
      - /var/log:/var/log:ro
    dns:
      - 192.168.144.1
    networks:
      - logging
    depends_on:
      loki:
        condition: service_healthy


#----------------- NETWORKING
networks:
  logging:
    name: $LOG_NET
    external: true
