services:
#----- CLOUDFLARED
  cloudflared:
    image: cloudflare/cloudflared:${CLOUDFLARED_TAG:-latest}
    container_name: Cloudflared
    hostname: cloudflared
    read_only: true
    privileged: false
    security_opt:
      - no-new-privileges:true
    command: tunnel --no-autoupdate run
    deploy:
      restart_policy:
        condition: unless-stopped
        delay: 5s
        window: 120s
      resources:
        limits:
          cpus: '0.05'
          memory: 30M
        reservations:
          cpus: '0.025'
          memory: 20M
    environment:
      - TUNNEL_TOKEN=${CF_TOKEN}
    labels:
      - autoheal:true
    networks:
      - docker
    logging:
      options:
        max-size: 50m

#----- NETBOOT.XYZ
  netbootxyz:
    image: ghcr.io/netbootxyz/netbootxyz:${NETBOOT_TAG:-latest}
    container_name: Netbootxyz
    hostname: netbootxyz
    read_only: false
    privileged: false
    security_opt:
      - no-new-privileges:true
    deploy:
      restart_policy:
        condition: unless-stopped
        delay: 5s
        window: 120s
    volumes:
      - ${USERDIR}/netboot:/config:rw
      - ${USERDIR}/netboot/assets:/assets:rw
    labels:
      - autoheal:true
    networks:
      - docker
    ports:
      - ${NETBOOT_HTTP_PORT:-8080}:80
      - ${NETBOOT_UI_PORT:-3000}:3000
      - ${NETBOOT_PORT:-69}:69/udp

#----- OPENSPEEDTEST
  openspeedtest:
    image: openspeedtest/${OSPEEDTEST_TAG:-latest}
    container_name: Open-Speed-Test
    hostname: openspeedtest
    read_only: false
    privileged: false
    security_opt:
      - no-new-privileges:true
    deploy:
      restart_policy:
        condition: unless-stopped
        delay: 5s
        window: 120s
      #resources:
      #  limits:
      #    cpus: '0.05'
      #    memory: 30M
      #  reservations:
      #    cpus: '0.025'
      #    memory: 20M
    labels:
      - autoheal:true
    networks:
      - docker
    ports:
      - ${OSPEEDTEST_HTTP_PORT:-3000}:3000
      - ${OSPEEDTEST_HTTPS_PORT:-3001}:3001

#----- SPEEDTEST TRACKER
  speedtest-tracker:
    image: ghcr.io/alexjustesen/speedtest-tracker:${SPEEDTEST_TAG:-latest}
    container_name: Speed-Test-Tracker
    hostname: speedtestracker
    read_only: false
    privileged: false
    security_opt:
      - no-new-privileges:true
    deploy:
      restart_policy:
        condition: unless-stopped
        delay: 5s
        window: 120s
      resources:
        limits:
          cpus: '0.75'
          memory: 250M
        reservations:
          cpus: '0.05'
          memory: 70M
    environment:
      - PUID=$UID
      - PGID=$GID
      - TZ=$TZ
    volumes:
      - $USERDIR/speedtestracker:/config:rw
    labels:
      - autoheal:true
    ports:
      - ${SPEEDTEST_WEBUI_PORT:-9443}:443
    networks:
      - docker
    logging:
      options:
        max-size: 50m

#----- UPTIME KUMA
  uptime-kuma:
    image: louislam/uptime-kuma:${KUMA_TAG:-latest}
    container_name: UptimeKuma
    hostname: uptimekuma
    read_only: true
    privileged: false
    security_opt:
      - no-new-privileges:true
    deploy:
      restart_policy:
        condition: unless-stopped
        delay: 5s
        window: 120s
      resources:
        limits:
          cpus: '0.25'
          memory: 180M
        reservations:
          cpus: '0.1'
          memory: 80M
    environment:
      - PUID=$UID
      - PGID=$GID
      - NODE_ENV=production
      - DOCKER_MODS=$KUMA_MODS
      - TP_DOMAIN=$TP_DOMAIN
      - TP_SCHEME=$TP_SCHEME
      - TP_THEME=$TP_THEME
    volumes:
      - $USERDIR/uptime-kuma:/app/data:rw
      - /var/run/docker.sock:/var/run/docker.sock:ro
    labels:
      - autoheal:true
    ports:
      - ${KUMA_WEBUI_PORT:-3001}:3001
    networks:
      - docker
    logging:
      options:
        max-size: 50m

#----- DUCKDNS
#  duckdns:
#    image: lscr.io/linuxserver/duckdns:${DUCKDNS_TAG:-latest}
#    container_name: DuckDNS
#    hostname: duckdns
#    restart: unless-stopped
#    security_opt:
#      - no-new-privileges:true
#    environment:
#      - PUID=$UID
#      - PGID=$GID
#      - UMASK=022
#      - SUBDOMAINS=$DUCKDNS_SUBDOMAINS
#      - TOKEN=$DUCKDNS_TOKEN
#      - LOG_FILE=false
#    volumes:
#      - $USERDIR/duckdns:/config:rw
#    labels:
#      - autoheal:true
#    networks:
#      - docker
#    logging:
#      options:
#        max-size: 50m


#----------------- NETWORKING
networks:
  docker:
    name: $DOCKER_NET
    external: true
