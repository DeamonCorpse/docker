services:
#----------------- CONTAINER MANAGEMENT
  autoheal:
    image: willfarrell/autoheal:${AH_TAG:-latest}
    container_name: Autoheal
    hostname: autoheal
    restart: unless-stopped
    init: true
    read_only: true
    pids_limit: 1
    security_opt:
      - no-new-privileges:true
    cpus: 0.25
    mem_limit: 12m
    mem_reservation: 6m
    environment:
      - AUTOHEAL_CONTAINER_LABEL=${AH_LABEL:-all} # all to watch all containers
      - AUTOHEAL_INTERVAL=${AH_INTERVAL:-5} # check every x seconds
      - AUTOHEAL_START_PERIOD=${AH_START:-0} # wait x seconds before first health check
      - AUTOHEAL_DEFAULT_STOP_TIMEOUT=${AH_STOP:-10} # Docker waits max x seconds for a container to stop before killing during restarts
      #- DOCKER_SOCK=$DOCKER_HOST # tcp://HOST:PORT Uncomment if using docker-host-proxy
      - CURL_TIMEOUT=${CURL_TIMEOUT:-30} # --max-time x seconds for curl requests to Docker API
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      #- $USERDIR/ssl:/certs/:ro
    networks:
      - default
    logging:
      options:
        max-size: 50m

  Watchtower:
    image: containrrr/watchtower:${WT_TAG:-latest}
    container_name: Watchtower
    hostname: watchtower
    restart: unless-stopped
    init: true
    read_only: true
    pids_limit: 2
    security_opt:
      - no-new-privileges:true
    cpus: 0.25
    mem_limit: 96m
    mem_reservation: 48m
    environment:
      #- DOCKER_HOST=$DOCKER_HOST # Uncomment if using docker-host-proxy
      - WATCHTOWER_POLL_INTERVAL=${WT_POLL:-86400}
      - WATCHTOWER_INCLUDE_STOPPED=${WT_INCL_STOP:-true}
      - WATCHTOWER_CLEANUP=${WT_CLEAN:-true}
      - WATCHTOWER_SCHEDULE=${WT_CLEAN:-30 1 * * *}
      - WATCHTOWER_HTTP_API_METRICS=${WT_HTTP_METRICS:-true}
      - WATCHTOWER_HTTP_API=${WT_HTTP_API:-true}
      - WATCHTOWER_HTTP_API_TOKEN=$WATCHTOWER_HTTP_API_TOKEN
    ports:
      - ${WT_PORT:-8080}:8080
    volumes:
      - /etc/localtime:/etc/localtime:ro
    networks:
      - docker
      - default
    logging:
      options:
        max-size: 50m

#----------------- CONTAINER SECURITY
  socket-proxy:
    image: ghcr.io/tecnativa/docker-socket-proxy:${DSP_TAG:-latest}
    container_name: Docker-Socket-Proxy
    hostname: socket-proxy
    restart: unless-stopped
    init: true
    read_only: true
    pids_limit: 1
    privileged: true
    ports:
      - ${DSP_PORT:-2375}:2375
    cpus: 0.10
    mem_limit: 12m
    mem_reservation: 6m
    environment:
      - LOG_LEVEL=info # debug,info,notice,warning,err,crit,alert,emerg
      ## Variables match the URL prefix (i.e. AUTH blocks access to /auth/* parts of the API, etc.).
      # 0 to revoke access.
      # 1 to grant access.
      ## Granted by Default
      - EVENTS=1
      - PING=1
      - VERSION=1
      ## Revoked by Default
      # Security critical
      - AUTH=0
      - SECRETS=0
      - POST=0
      # Not always needed
      - BUILD=0
      - COMMIT=0
      - CONFIGS=0
      - CONTAINERS=1
      - DISTRIBUTION=0
      - EXEC=0
      - IMAGES=1 # Portainer
      - INFO=1
      - NETWORKS=1 # Portainer
      - NODES=0
      - PLUGINS=0
      - SERVICES=1 # Portainer
      - SESSION=0
      - SWARM=0
      - SYSTEM=0
      - TASKS=1
      - VOLUMES=1
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    tmpfs:
      - /run
    networks:
      - default
    logging:
      options:
        max-size: 50m

  # Use this environment variable in containers needing to connect to docker.sock
  # - DOCKER_HOST=tcp://socket-proxy:2375

#----------------- CONTAINER BACKUPS
  duplicati:
    image: lscr.io/linuxserver/duplicati:${DUP_TAG:-latest}
    container_name: Duplicati
    hostname: duplicati
    restart: unless-stopped
    init: true
    pids_limit: 2
    security_opt:
      - no-new-privileges:true
    cpus: 0.25
    mem_limit: 96m
    mem_reservation: 48m
    environment:
      - PUID=${PUID:-1000}
      - PGID=${PGID:-1000}
      - TZ=${TZ:-America/Toronto}
      #- CLI_ARGS= #optional
    ports:
      - ${DUP_PORT:-8200}:8200
    volumes:
      - $USERDIR/duplicati:/config
      - $USERDIR2/backups:/backups
      - $USERDIR/cron-scripts:/source/cron-scripts
      - $USERDIR/portainer:/source/portainer
    networks:
      - default
    logging:
      options:
        max-size: 50m

#----------------- NETWORKING
networks:
  default:
    name: $DEFAULT_NET
    external: true
  docker:
    name: $DOCKER_NET
    external: true
