services:
#----------------- SERVICE MONITORING
  uptime-kuma:
    image: louislam/uptime-kuma:${KUMA_TAG:-latest}
    container_name: Uptime-Kuma
    hostname: kuma
    restart: unless-stopped
    init: true
    read_only: true
    pids_limit: 5
    cap_drop:
      - ALL
    cap_add:
      - CAP_CHOWN
      - CAP_SETGID
      - CAP_NET_RAW
      - CAP_SETUID
    security_opt:
      - no-new-privileges:true
    cpus: 0.10
    mem_limit: 24m
    mem_reservation: 10m
    ports:
      - ${KUMA_PORT:-3001}:3001
    volumes:
      - $USERDIR/uptime-kuma:/app/data
    networks:
      - default
      - docker
    logging:
      options:
        max-size: 50m

#----------------- PROMETHEUS
  Prometheus:
    image: prom/prometheus:${PROM_TAG:-latest}
    container_name: Prometheus
    hostname: prometheus
    restart: unless-stopped
    init: true
    read_only: true
    pids_limit: 5
    cap_drop:
      - ALL
    security_opt:
      - no-new-privileges:true
    cpus: 0.10
    mem_limit: 24m
    mem_reservation: 10m
    ports:
      - ${PROM_PORT:-9090}:9090
    volumes:
      - $USERDIR/prometheus:/etc/prometheus
      - $USERDIR/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - default
      - docker
    logging:
      options:
        max-size: 50m

  alert-manager:
    image: quay.io/prometheus/alertmanager:${AM_TAG:-latest}
    container_name: Alert-Manager
    hostname: altermanager
    restart: unless-stopped
    init: true
    read_only: true
    pids_limit: 3
    cap_drop:
      - ALL
    security_opt:
      - no-new-privileges:true
    cpus: 0.05
    mem_limit: 24m
    mem_reservation: 10m
    ports:
      - ${AM_PORT:-9093}:9093
    volumes:
      - $USERDIR/alertmanager/alertmanager.yml:/alertmanager.yml
    networks:
      - default
      - docker
    logging:
      options:
        max-size: 50m

  prometheus_speedtest:
    image: ghcr.io/miguelndecarvalho/speedtest-exporter:${SPEED_TAG:-latest}
    container_name: Speedtest
    hostname: speedtest
    restart: unless-stopped
    init: true
    read_only: true
    pids_limit: 1
    cap_drop:
      - ALL
    security_opt:
      - no-new-privileges:true
    cpus: 0.05
    mem_limit: 24m
    mem_reservation: 10m
    expose:
      - ${SPEED_PORT:-9798}:9798
    networks:
      - default
      - docker
    logging:
      options:
        max-size: 50m

  radarr-exporter:
    image: ghcr.io/onedr0p/exportarr:${EXPORTARR_TAG:-latest}
    container_name: Exporter-Radarr
    hostname: exporterr
    restart: unless-stopped
    init: true
    read_only: true
    pids_limit: 3
    cap_drop:
      - ALL
    security_opt:
      - no-new-privileges:true
    cpus: 0.05
    mem_limit: 24m
    mem_reservation: 10m
    command: ["exportarr", "radarr"]
    environment:
      TINI_SUBREAPER: "true"
      PORT: ${RADARR_EX_PORT:-9798}
      URL: $RADARR_URL
      APIKEY: $RADARR_API_KEY
    expose:
      - ${RADARR_EX_PORT:-9798}
    networks:
      - default
      - docker
    logging:
      options:
        max-size: 50m

  sonarr-exporter:
    image: ghcr.io/onedr0p/exportarr:${EXPORTARR_TAG:-latest}
    container_name: Exporter-Sonarr
    hostname: exporters
    restart: unless-stopped
    init: true
    read_only: true
    pids_limit: 5
    cap_drop:
      - ALL
    security_opt:
      - no-new-privileges:true
    cpus: 0.05
    mem_limit: 24m
    mem_reservation: 10m
    command: ["exportarr", "sonarr"]
    environment:
      TINI_SUBREAPER: "true"
      PORT: ${SONARR_EX_PORT:-9707}
      URL: $SONARR_URL
      APIKEY: $SONARR_API_KEY
      ENABLE_EPISODE_QUALITY_METRICS: "false"
    expose:
      - ${SONARR_EX_PORT:-9707}
    networks:
      - default
      - docker
    logging:
      options:
        max-size: 50m

  tautulli-nsfk:
    image: tautulli/tautulli:${TAUT_TAG:-latest}
    container_name: Tautulli-NSFK
    hostname: tautulli-nsfk
    restart: unless-stopped
    init: true
    read_only: true
    pids_limit: 3
    cap_drop:
      - ALL
    cap_add:
      - CAP_SETGID
      - CAP_SETUID
    security_opt:
      - no-new-privileges:true
    cpus: 0.05
    mem_limit: 24m
    mem_reservation: 10m
    environment:
      - PGID=${PGID:-1000}
      - PUID=${PUID:-1000}
      - TZ=${TZ:-America/Toronto}
    ports:
      - ${TAUT_NSFK_PORT:-8181}:8181
    volumes:
      - $USERDIR/tautulli/nsfk:/config:rw
    networks:
      - default
      - docker
    logging:
      options:
        max-size: 50m

  tautulli-multimedia:
    image: tautulli/tautulli:${TAUT_TAG:-latest}
    container_name: Tautulli-Multimedia
    hostname: tautulli-mm
    restart: unless-stopped
    init: true
    read_only: true
    pids_limit: 3
    cap_drop:
      - ALL
    cap_add:
      - CAP_SETGID
      - CAP_SETUID
    security_opt:
      - no-new-privileges:true
    cpus: 0.05
    mem_limit: 24m
    mem_reservation: 10m
    environment:
      - PGID=${PGID:-1000}
      - PUID=${PUID:-1000}
      - TZ=${TZ:-America/Toronto}
    ports:
      - ${TAUT_MM_PORT:-8181}:8181
    volumes:
      - $USERDIR/tautulli/multimedia:/config:rw
    networks:
      - default
      - docker
    logging:
      options:
        max-size: 50m


#----------------- GRAFANA
  Grafana:
    image: grafana/grafana:${GRAFANA_TAG:-latest-ubuntu}
    container_name: Grafana
    hostname: grafana
    restart: unless-stopped
    init: true
    read_only: true
    pids_limit: 5
    cap_drop:
      - ALL
    security_opt:
      - no-new-privileges:true
    cpus: 0.5
    mem_limit: 24m
    mem_reservation: 10m
    environment:
      - GF_INSTALL_PLUGINS=$GRAFANA_PLUGINS
    ports:
      - ${GRAFANA_PORT:-3000}:3000
    volumes:
      - $USERDIR/grafana:/var/lib/grafana
    tmpfs:
      - /tmp
    networks:
      - default
      - docker
    logging:
      options:
        max-size: 50m

  Loki:
    image: grafana/loki:${LOKI_TAG:-2.4.1}
    container_name: Loki
    hostname: loki
    restart: unless-stopped
    init: true
    read_only: true
    pids_limit: 3
    cap_drop:
      - ALL
    security_opt:
      - no-new-privileges:true
    cpus: 0.5
    mem_limit: 24m
    mem_reservation: 10m
    ports:
      - ${LOKI_PORT:-3100}:3100
    environment:
      - user=${PUID:-1000}
    volumes:
      - $USERDIR/loki/loki-config.yml:/etc/loki/loki-config.yml
    networks:
      - default
      - docker
    logging:
      options:
        max-size: 50m

  Promtail:
    image: grafana/promtail:${PROMTAIL_TAG:-latest}
    container_name: Promtail
    hostname: promtail
    restart: unless-stopped
    init: true
    read_only: true
    pids_limit: 3
    cap_drop:
      - ALL
    security_opt:
      - no-new-privileges:true
    cpus: 0.5
    mem_limit: 24m
    mem_reservation: 10m
    volumes:
      - /var/log:/var/log:ro
      - $USERDIR/promtail/promtail-config.yml:/etc/promtail/promtail-config.yml
    networks:
      - default
      - docker
    logging:
      options:
        max-size: 50m
    

#----------------- NETWORKING
networks:
  default:
    name: $DEFAULT_NET
    external: true
  docker:
    name: $DOCKER_NET
    external: true
